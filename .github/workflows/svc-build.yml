name: svc-build


#--------------------------------------------------#
#                     Triggers                     # 
#--------------------------------------------------#
on:

  workflow_call:
    inputs:
      language:
        type: string
        required: false
        default: ""
        description: "Main language of the repository"
      environment:
        type: string
        required: true
        default: dev
        description: "Environment name"
      containerRegistry:
        type: string
        required: false
        default: ghcr.io
        description: "Container registry to upload container images"
      platforms:
        type: string
        required: false
        default: "linux/386,linux/amd64,linux/arm/v7,linux/arm/v8,linux/arm64,linux/ppc64le,linux/s390x"
        description: "Multi-plataform container builds"
      nodeVersion:
        type: string
        required: false
        default: '17'
      pythonVersion:
        type: string
        required: false
        default: '3.10'
      goVersion:
        type: string
        required: false
        default: '1.18'

    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true


#--------------------------------------------------#
#                  Workflow Jobs                   # 
#--------------------------------------------------#
jobs:

  #--------------------------------------------------#
  #                  Build: Node.js                  # 
  #--------------------------------------------------#
  Build-Node:
    runs-on: ubuntu-latest
    if: inputs.language == 'javascript'

    steps:

      # pre-job
      - name: Setup | Cloning tools
        uses: actions/checkout@v4
        with:
          ref: env/${{inputs.environment}}

      - name: Pipeline config scrapper
        id: analysis
        uses: filipeforattini/ff-iac-github-actions/.github/actions/config-scrapper@main
        with:
          containerRegistry: ${{inputs.containerRegistry}}

      - name: Setup | Dependencies
        uses: filipeforattini/ff-iac-github-actions/.github/actions/setup-binaries@main
        with:
          docker-qmeu: true
          docker-buildx: true
      
      - name: Docs | Write summary title
        run: |
          echo "### ðŸš¢ Build" >> $GITHUB_STEP_SUMMARY

      # pre-build
      - name: Create Dockerfile
        uses: filipeforattini/ff-iac-github-actions/.github/actions/create-dockerfile@main
        if: steps.analysis.outputs.feature_has_dockerfile == 'false'
        with:
          writeSummary: true
          preset: node
          params: '{"tag": "${{inputs.nodeVersion}}-slim"}'

      - name: Create .dockerignore
        uses: filipeforattini/ff-iac-github-actions/.github/actions/create-dockerignore@main
        if: steps.analysis.outputs.feature_has_dockerignore == 'false'
        with:
          writeSummary: true
          globsToIgnore: '["node_modules"]'

      # login
      - name: Config | Login to Container Registry
        uses: docker/login-action@v2
        with:
          logout: false
          registry: ${{inputs.containerRegistry}}
          username: ${{secrets.REGISTRY_USERNAME}}
          password: ${{secrets.REGISTRY_PASSWORD}}

      # build
      - name: Copy config
        run: |
          if test -f ./manifests/configs/${{inputs.environment}}.env; then cp ./manifests/configs/${{inputs.environment}}.env ./.env; fi

      - name: Build container image and push
        uses: filipeforattini/ff-iac-github-actions/.github/actions/pack-docker-build@main
        with:
          cached: true
          platforms: ${{inputs.platforms}}
          containerRegistry: ${{inputs.containerRegistry}}


  #--------------------------------------------------#
  #                  Build: Python                   # 
  #--------------------------------------------------#
  Build-Python:
    runs-on: ubuntu-latest
    if: inputs.language == 'python'

    steps:

      # pre-job
      - name: Setup | Cloning tools
        uses: actions/checkout@v4
        with:
          ref: env/${{inputs.environment}}

      - name: Pipeline config scrapper
        id: analysis
        uses: filipeforattini/ff-iac-github-actions/.github/actions/config-scrapper@main
        with:
          containerRegistry: ${{inputs.containerRegistry}}

      - name: Setup | Dependencies
        uses: filipeforattini/ff-iac-github-actions/.github/actions/setup-binaries@main
        with:
          docker-qmeu: true
          docker-buildx: true

      - name: Docs | Write summary title
        run: |
          echo "### ðŸš¢ Build" >> $GITHUB_STEP_SUMMARY

      # pre-build
      - name: Create Dockerfile
        uses: filipeforattini/ff-iac-github-actions/.github/actions/create-dockerfile@main
        if: steps.analysis.outputs.feature_has_dockerfile == 'false'
        with:
          writeSummary: true
          preset: python
          params: '{"tag": "${{inputs.pythonVersion}}"}'

      - name: Create .dockerignore
        uses: filipeforattini/ff-iac-github-actions/.github/actions/create-dockerignore@main
        if: steps.analysis.outputs.feature_has_dockerignore == 'false'
        with:
          writeSummary: true

      # login
      - name: Config | Login to Container Registry
        uses: docker/login-action@v2
        with:
          logout: false
          registry: ${{inputs.containerRegistry}}
          username: ${{secrets.REGISTRY_USERNAME}}
          password: ${{secrets.REGISTRY_PASSWORD}}

      # build
      - name: Copy config
        run: |
          if test -f ./manifests/configs/${{inputs.environment}}.env; then cp ./manifests/configs/${{inputs.environment}}.env ./.env; fi

      - name: Build container image and push
        uses: filipeforattini/ff-iac-github-actions/.github/actions/pack-docker-build@main
        with:
          cached: true
          platforms: ${{inputs.platforms}}
          containerRegistry: ${{inputs.containerRegistry}}


  #--------------------------------------------------#
  #                    Build: Go                     # 
  #--------------------------------------------------#
  Build-Go:
    runs-on: ubuntu-latest
    if: inputs.language == 'go'

    steps:

      # pre-job
      - name: Setup | Cloning tools
        uses: actions/checkout@v4
        with:
          ref: env/${{inputs.environment}}

      - name: Pipeline config scrapper
        id: analysis
        uses: filipeforattini/ff-iac-github-actions/.github/actions/config-scrapper@main
        with:
          containerRegistry: ${{secrets.REGISTRY_HOST}}

      - name: Setup | Dependencies
        uses: filipeforattini/ff-iac-github-actions/.github/actions/setup-binaries@main
        with:
          docker-qmeu: true
          docker-buildx: true

      - name: Docs | Write summary title
        run: |
          echo "### ðŸš¢ Build" >> $GITHUB_STEP_SUMMARY

      # pre-build
      - name: Create Dockerfile
        uses: filipeforattini/ff-iac-github-actions/.github/actions/create-dockerfile@main
        if: steps.analysis.outputs.feature_has_dockerfile == 'false'
        with:
          writeSummary: true
          preset: go
          params: '{"tag": "${{inputs.goVersion}}"}'

      - name: Create .dockerignore
        uses: filipeforattini/ff-iac-github-actions/.github/actions/create-dockerignore@main
        if: steps.analysis.outputs.feature_has_dockerignore == 'false'
        with:
          writeSummary: true
      
      # login
      - name: Config | Login to Container Registry
        uses: docker/login-action@v2
        with:
          logout: false
          registry: ${{inputs.containerRegistry}}
          username: ${{secrets.REGISTRY_USERNAME}}
          password: ${{secrets.REGISTRY_PASSWORD}}

      # build
      - name: Copy config
        run: |
          if test -f ./manifests/configs/${{inputs.environment}}.env; then cp ./manifests/configs/${{inputs.environment}}.env ./.env; fi

      - name: Build container image and push
        uses: filipeforattini/ff-iac-github-actions/.github/actions/pack-docker-build@main
        with:
          cached: true
          platforms: ${{inputs.platforms}}
          containerRegistry: ${{inputs.containerRegistry}}


  #--------------------------------------------------#
  #                Build: Dockerfile                 # 
  #--------------------------------------------------#
  Build-Dockerfile:
    runs-on: ubuntu-latest
    if: inputs.language == 'undetected'

    steps:

      # pre-job
      - name: Setup | Cloning tools
        uses: actions/checkout@v4
        with:
          ref: env/${{inputs.environment}}

      - name: Pipeline config scrapper
        id: analysis
        uses: filipeforattini/ff-iac-github-actions/.github/actions/config-scrapper@main
        with:
          containerRegistry: ${{inputs.containerRegistry}}

      - name: Setup | Dependencies
        uses: filipeforattini/ff-iac-github-actions/.github/actions/setup-binaries@main
        with:
          docker-qmeu: true
          docker-buildx: true

      - name: Docs | Write summary title
        run: |
          echo "### ðŸš¢ Build" >> $GITHUB_STEP_SUMMARY

      # pre-build
      - name: Create .dockerignore
        uses: filipeforattini/ff-iac-github-actions/.github/actions/create-dockerignore@main
        if: steps.analysis.outputs.feature_has_dockerignore != true
        with:
          writeSummary: true

      # login
      - name: Config | Login to Container Registry
        uses: docker/login-action@v2
        with:
          logout: false
          registry: ${{inputs.containerRegistry}}
          username: ${{secrets.REGISTRY_USERNAME}}
          password: ${{secrets.REGISTRY_PASSWORD}}

      # build
      - name: Copy config
        run: |
          if test -f ./manifests/configs/${{inputs.environment}}.env; then cp ./manifests/configs/${{inputs.environment}}.env ./.env; fi

      - name: Build container image and push
        uses: filipeforattini/ff-iac-github-actions/.github/actions/pack-docker-build@main
        with:
          cached: true
          platforms: ${{inputs.platforms}}
          containerRegistry: ${{inputs.containerRegistry}}
