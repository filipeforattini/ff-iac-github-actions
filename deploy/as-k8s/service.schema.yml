#@ def defaultDeployment():
  enable: true
  replicas: 1
  name: svc
  #@schema/type any=True
  labels: {}
  #@schema/type any=True
  annotations: {}

  #@schema/type any=True
  stg_annotations: {}

  #@schema/type any=True
  prd_annotations: {}

  imagePullSecrets: true
  imagePullSecretsName: registry-token

  #@schema/type any=True
  nodeSelector: []

  #@schema/type any=True
  stg_nodeSelector: []

  #@schema/type any=True
  prd_nodeSelector: []

  #@ schema/type any=True
  prd_tolerations: []

  #@ schema/type any=True
  stg_tolerations: []

  #@schema/type any=True
  tolerations: []

  #@schema/type any=True
  ports: []

  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []

  #@schema/type any=True
  templateLabels: {}
  matchLabels:
    overwrite: false
    labels: {}

  hpa:
    enable: false
    minReplicas: 1
    maxReplicas: 3
    cpu: 70
#@ end

#@ def defaultService():
  enable: true
  name: svc
  type: ClusterIP
  controller: null

  #@schema/type any=True
  labels: null
  #@schema/type any=True
  annotations: null
  
  selector:
    overwrite: false
    labels: {}

  #@schema/type any=True
  ports: []

  externalDns:
    enable: false
    domain: acme.io

  #! types specifics
  aws:
    internal: true
    sslCert: ""
    nodeTabels: ""
#@ end

#@ def defaultIngress():
  enable: false
  name: svc
  controller: null
  className: traefik

  #@schema/type any=True
  labels: null
  #@schema/type any=True
  annotations: null

  domain: acme.io
  removeEnvironmentPrefix: false
  
  externalDns:
    enable: false
    
  letsencrypt:
    enable: false
    email: security@acme.io
    type: cluster-issuer

  #! types specifics
  alb:
    public: false
    certificateArn: ""
  nginx:
    certmanager: true
  traefik:
    x: true
#@ end

#@ def defaultJob():
  enable: false
  replicas: 1
  name: svc-job
  labels: {}
  annotations: {}
  imagePullSecrets: true
  imagePullSecretsName: registry-token
  ttlSecondsAfterFinished: 600

  backoffLimit: 1
  command: []

  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []

  #@schema/type any=True
  nodeSelector: []
#@ end


#@ def defaultCronJob():
  enable: false
  replicas: 1
  name: svc-cronjob
  labels: {}
  annotations: {}
  imagePullSecrets: true
  imagePullSecretsName: registry-token

  schedule: "* * * * *"
  command: []

  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []

  #@schema/type any=True
  nodeSelector: []
#@ end

#@data/values-schema
---

#! PIPELINE CONTROLE
pipelineControl:
  datetime: 'today'
  environmentAsSubdomains: true
  environmentsAsNamespaces: false


#! GLOBAL
ecosystem: acm
organization: acme
containerRegistry: ghcr.io
repository: acm-svc-service
environment: dev
tag: latest
port: 3333


#! FEATURES
features:
  enableLinkerd: false


#! ENVIRONMENT
#@schema/type any=True
env: []
#@schema/type any=True
envFromSecrets: []
#@schema/type any=True
envFromConfigMaps: []
#@schema/type any=True
envFromDependencies: []


#! KUBERNETES
#@schema/default defaultDeployment()
#@schema/type any=True
deployment: null

#@schema/default defaultService()
#@schema/type any=True
service: null

#@schema/default defaultIngress()
#@schema/type any=True
ingress: null

#@schema/default defaultJob()
#@schema/type any=True
job: null

#@schema/default defaultCronJob()
#@schema/type any=True
cronjob: null
